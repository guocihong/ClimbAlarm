C51 COMPILER V9.54   DOORKEEP_TASK                                                         07/01/2016 17:14:38 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DOORKEEP_TASK
OBJECT MODULE PLACED IN .\Objects\doorkeep_task.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE task\doorkeep\doorkeep_task.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(
                    -.\Listings\doorkeep_task.lst) OBJECT(.\Objects\doorkeep_task.obj)

line level    source

   1          #include "task/doorkeep/doorkeep_task.h"
   2          
   3          #define DK_CHECK_TEMP    (1000 / SCHEDULER_TICK)          //ÃÅ´Å¿ª¹Ø¼ì²éÖÜÆÚ
   4          #define DK_CONFORM_TEMP  ( 100 / SCHEDULER_TICK)  //ÃÅ´Å¿ª¹Ø±ä»¯È·ÈÏÑÓÊ±
   5          
   6          /* Doorkeep(ÃÅ´Å) */
   7          extern bdata  bit   gl_dk_status;                     //ÃÅ´Å¿ª¹Ø×´Ì¬£¨Ã¿1s¶¯Ì¬¼ì²â£©: 1 - ±ÕºÏ; 0 - ´ò¿ª(Ð
             -èÒª±¨¾¯)
   8          extern xdata  Byte  gl_dk_tick;                           //ÃÅ´Å¼ì²â¼ÆÊ±tick
   9          
  10          /* for system */
  11          extern idata  Byte  system_status;                    //ÏµÍ³×´Ì¬
  12          
  13          static xdata  Byte  dk_read_state;                    //task state
  14          
  15          void doorkeep_task_init(void)
  16          {
  17   1              gl_dk_status = 1;                                 //ÉÏµçÊ±£¬È±Ê¡Îª±ÕºÏ
  18   1              dk_read_state = DK_READ_START;
  19   1      }
  20          
  21          void doorkeep_task(void)
  22          {
  23   1              switch (dk_read_state)
  24   1              {
  25   2              case DK_READ_START: //¿ªÊ¼ÈÎÎñ
  26   2                      if (system_status > SYS_SAMP_BASE) {
  27   3                              //ÏµÍ³½øÈëÊµÊ±¼ì²â½×¶Î²Å¿ªÊ¼¼ì²éÃÅ´Å
  28   3                              gl_dk_tick = 0;
  29   3                              dk_read_state = DK_READ_IDLE;
  30   3                      }
  31   2                      break;
  32   2      
  33   2              case DK_READ_IDLE://¼ì²âÃÅ´ÅÓÐÎÞ±ä»¯
  34   2                      if (gl_dk_tick > DK_CHECK_TEMP) {
  35   3                              //Ã¿Ãë¼ì²âÒ»´Î
  36   3                              gl_dk_tick = 0;
  37   3                              if (gl_dk_status == 1) {
  38   4                                      //Ô­À´ÎªÃÅ´Å±ÕºÏ
  39   4                                      if (bDoorKeeper == 0) {
  40   5                                              //ÃÅ´Å¿ÉÄÜ±»´ò¿ª, ½øÈëÑÓÊ±È·ÈÏ½×¶Î
  41   5                                              dk_read_state = DK_READ_DELAY;
  42   5                                      }
  43   4                              } else {
  44   4                                      //Ô­À´ÎªÃÅ´Å´ò¿ª
  45   4                                      if (bDoorKeeper == 1) {
  46   5                                              //ÃÅ´Å¿ÉÄÜ±»±ÕºÏ, ½øÈëÑÓÊ±È·ÈÏ½×¶Î
  47   5                                              dk_read_state = DK_READ_DELAY;
  48   5                                      }
  49   4                              }
  50   3                      }
  51   2                      break;
  52   2      
  53   2              case DK_READ_DELAY://ÑÓÊ±È·ÈÏ
C51 COMPILER V9.54   DOORKEEP_TASK                                                         07/01/2016 17:14:38 PAGE 2   

  54   2                      if (gl_dk_tick > DK_CONFORM_TEMP) {
  55   3                              // ÑÓÊ±Ê±¼äµ½, ÅÐ¶ÏÊÇ·ñÊÇÎÈ¶¨µÄ±ä»¯
  56   3                              if ((gl_dk_status == 1) && (bDoorKeeper == 0)) {// ÃÅ´ÅÒÑ¾­´ò¿ª                                                         
  57   4                                      //¸üÐÂ±äÁ¿
  58   4                                      gl_dk_status = 0;
  59   4                                      
  60   4                                      //ÃÅ´Å±¨¾¯Ö¸Ê¾µÆ
  61   4                                      P32 = 0;
  62   4                              } else if ((gl_dk_status == 0) && (bDoorKeeper == 1)) {// ÃÅ´ÅÒÑ¾­±ÕºÏ
  63   4                                      //¸üÐÂ±äÁ¿
  64   4                                      gl_dk_status = 1;
  65   4                                      
  66   4                                      //ÃÅ´Å±¨¾¯Ö¸Ê¾µÆ
  67   4                                      P32 = 1;
  68   4                              }
  69   3      
  70   3                              gl_dk_tick = 0;
  71   3                              dk_read_state = DK_READ_IDLE;
  72   3                      }
  73   2                      break;
  74   2              }
  75   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    103    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
