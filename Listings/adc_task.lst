C51 COMPILER V9.54   ADC_TASK                                                              05/13/2016 14:54:22 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ADC_TASK
OBJECT MODULE PLACED IN .\Objects\adc_task.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE task\adc\adc_task.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings
                    -\adc_task.lst) OBJECT(.\Objects\adc_task.obj)

line level    source

   1          #include "task/adc/adc_task.h"
   2          
   3          /* for AD */
   4          #define AD_EQU_PNUM            4                     //√øµ¿∏÷Àø≤…—˘4¥Œ«Û∆Ωæ˘÷µ
   5          
   6          extern  data  Byte        ad_sensor_mask;    //¥´∏–∆˜—⁄¬Î
   7          extern  data  sAD_Sample  ad_sample;         //±£¥Êµ±«∞≤…—˘÷µ
   8          extern idata  sAD_Sum     ad_samp_equ;       //æ˘∫‚»•‡–…˘«Û∫Õ
   9          extern xdata  Union16     ad_chn_sample;     //◊Ó–¬“ª¬÷≤…—˘÷µ£®“—æ˘∫‚»•‘Î…˘£¨√øÕ®µ¿“ª∏ˆµ„£¨—≠ª∑±£¥Ê£©
  10          extern idata  Uint16      ad_samp_pnum;      //≤…—˘µ„ ˝(º∆À„æ≤Ã¨ª˘◊º÷µ ±◊‹≤…—˘µ„ ˝)
  11          extern idata  sAD_Sum     ad_samp_sum;       //Ω◊∂Œ«Û∫Õ
  12          extern xdata  sAD_BASE    ad_chn_base;       //∏˜Õ®µ¿‘À–– ±æ≤Ã¨ª˘◊º÷µ/…œœ¬œﬁ∑ß÷µ£®µ•Œª£∫≤…—˘÷µ£©
  13          extern  data  Byte        ad_chn_over;       //∏˜Õ®µ¿¡¨–¯≤…—˘µ„(æ˘∫‚∫Û)µƒ∑ß÷µ≈–∂®£∫ 0 - ∑∂Œßƒ⁄£ª 1 - ≥¨∑ß÷
             -µ
  14          extern xdata  Byte        ad_still_Dup;      //±®æØ∑ß÷µ…œœﬁ
  15          extern idata  Uint16      ad_alarm_exts;     //Õ‚¡¶±®æØ±Í÷æ£®Œﬁmask£©£∫ Œª÷µ 0 - Œﬁ£ª 1 - ≥¨∑ß÷µ
  16          
  17          /* for this task: ”√”⁄ª˘◊º÷µ∏˙◊Ÿ */
  18          static idata  Byte        md_point;          //”√”⁄ª˘◊º÷µ∏˙◊Ÿµƒº∆¡øµ„ ˝
  19          
  20          /* for system */
  21          extern idata  Byte        system_status;     //œµÕ≥◊¥Ã¨
  22          
  23          /* variables for alarm output */
  24          extern data   Uint16      ad_alarm_tick;     //∏˜Õ®µ¿±®æØº∆ ±tick
  25          extern bdata  bit         ad_alarm_flag;     //Õ‚¡¶±®æØ±Í÷æ
  26          static xdata  Uint16      alarm_led_flag;        //LED±®æØ÷∏ æ: 0 - Œﬁ±®æØ£®√£©£ª1 - ±®æØ£®¡¡£©
  27          
  28          void adc_task_init(void)
  29          {
  30   1              //œ‡πÿ±‰¡ø≥ı ºªØ
  31   1              ad_sample.valid = 0;                     //ø’œ–£¨ø…“‘–¥»Î–¬÷µ
  32   1              ad_samp_pnum    = 0;                     //≤…—˘µ„ ˝(º∆À„æ≤Ã¨ª˘◊º÷µ ±◊‹≤…—˘µ„ ˝)
  33   1              ad_samp_equ.sum       = 0;                   //æ˘∫‚»•‡–…˘«Û∫Õ
  34   1              ad_samp_equ.point     = 0;
  35   1              ad_samp_sum.sum       = 0;                   //Ω◊∂Œ«Û∫Õ
  36   1              ad_samp_sum.point     = 0;
  37   1              ad_chn_sample.w       = 0;                   //◊Ó–¬“ª¬÷≤…—˘÷µ
  38   1              ad_chn_base.base      = 0;                   //∏˜Õ®µ¿æ≤Ã¨ª˘◊º÷µ/…œœ¬œﬁ∑ß÷µ
  39   1              ad_chn_base.base_down = 0;
  40   1              ad_chn_base.base_up   = 0;
  41   1              ad_chn_over           = 0x00;            //∏˜Õ®µ¿¡¨–¯≤…—˘µ„(æ˘∫‚∫Û)µƒ∑ß÷µ≈–∂®£∫æ˘‘⁄∑∂Œßƒ⁄
  42   1              md_point              = 0;               //”√”⁄ª˘◊º÷µ∏˙◊Ÿµƒº∆¡øµ„ ˝
  43   1              ad_alarm_tick         = 0x00;
  44   1      
  45   1              ad_alarm_exts   = 0;                                     //Õ‚¡¶±®æØ±Í÷æ£®Œﬁmask£©: Œﬁ
  46   1              alarm_led_flag  = 0;                     //À˘”–±®æØLEDŒ™√
  47   1              ad_alarm_flag   = 0;
  48   1      
  49   1              //adc”≤º˛≥ı ºªØ
  50   1              adc_init();
  51   1      }
  52          
  53          void adc_task(void)
C51 COMPILER V9.54   ADC_TASK                                                              05/13/2016 14:54:22 PAGE 2   

  54          {
  55   1              Uint16  temp16;         //¡Ÿ ±±‰¡ø
  56   1              Uint16  val_temp;       //–¬ÀÕ»Îµƒ10bit≤…—˘÷µ,  ∫Û◊˜¡Ÿ ±±‰¡ø
  57   1              Uint16  val;            //4µ„æ˘∫‚∫Ûµ√µΩµƒ∆Ωæ˘≤…—˘÷µ, ◊˜Œ™“ª∏ˆø…Ω¯––≥¨œﬁ≈–∂œµƒ◊Ó–°µ„
  58   1      
  59   1              if (ad_sample.valid) {  //”––¬≤…—˘ ˝æ›µΩ¥Ô
  60   2                      // 0. ±£¥ÊµΩ¡Ÿ ±±‰¡ø
  61   2                      val_temp = ad_sample.val;
  62   2      
  63   2                      // 1. ±£¥ÊµΩæ˘∫‚»•‡–…˘«Û∫Õ÷–
  64   2                      ad_samp_equ.sum += val_temp;
  65   2                      ad_samp_equ.point++;
  66   2      
  67   2                      // 2. µ±«∞Õ®µ¿ «∑Ò¬˙◊„»•‡–…˘µ„ ˝
  68   2                      if (ad_samp_equ.point == AD_EQU_PNUM) {
  69   3                              // “—¬˙»•‡–…˘µ„ ˝£¨ø…«Û≥ˆæ˘∫‚∫Ûµƒ“ª∏ˆµ„
  70   3                              // 2.a «Û≥ˆ∂‘”¶Õ®µ¿µƒ“ª∏ˆ≤…—˘µ„
  71   3                              val = ad_samp_equ.sum >> 2;  //≥˝”⁄4
  72   3      
  73   3                              // 2.b «Â¡„µ±«∞Õ®µ¿µƒ»•‡–…˘«Û∫ÕΩ·ππ
  74   3                              ad_samp_equ.sum = 0;
  75   3                              ad_samp_equ.point = 0;
  76   3      
  77   3                              // 2.c ±£¥Ê µ ±≤…—˘÷µ
  78   3                              ad_chn_sample.w = val;   //±£¥ÊµΩ◊Ó–¬“ª¬÷≤…—˘÷µ ˝◊È÷–
  79   3      
  80   3                              // 2.d ”…œµÕ≥◊¥Ã¨æˆ∂® ˝æ›µƒ¥¶¿Ì
  81   3                              switch (system_status)
  82   3                              {
  83   4                              case SYS_PowerON:   //…œµÁ
  84   4                              case SYS_B5S:       //5√Î—” ±
  85   4                                      break;
  86   4      
  87   4                              case SYS_SAMP_BASE: //≥ı º…œµÁ ±µƒæ≤Ã¨ª˘◊º÷µ≤…—˘
  88   4                                      //¥Ê»ÎΩ◊∂Œ∫Õ
  89   4                                      ad_samp_sum.sum += val;
  90   4                                      ad_samp_pnum++;
  91   4                                      if (ad_samp_pnum == 32) {
  92   5                                              //“—æ≠¬˙ª˘◊º÷µ≤…—˘µ„ ˝£®√øÕ®µ¿32µ„)
  93   5                                              //1.º∆À„æ˘÷µ∫Õ…œœ¬œﬁ
  94   5                                              //ª˘◊º
  95   5                                              ad_chn_base.base = ad_samp_sum.sum >> 5;   //≥˝”⁄32
  96   5      
  97   5                                              //œ¬œﬁ = ª˘◊º * £®1 / 3£©
  98   5                                              val_temp = ad_chn_base.base;
  99   5                                              ad_chn_base.base_down = val_temp / 3;
 100   5      
 101   5                                              //…œœﬁ
 102   5                                              if ((1023 - ad_chn_base.base) > ad_still_Dup) {
 103   6                                                      ad_chn_base.base_up = ad_chn_base.base + ad_still_Dup;
 104   6                                              } else {
 105   6                                                      ad_chn_base.base_up = 1023;
 106   6                                              }
 107   5      
 108   5                                              //∏¥ŒªΩ◊∂Œ∫Õ±‰¡ø£¨◊º±∏”√”⁄◊‘  ”¶∑ß÷µ∏˙◊Ÿ
 109   5                                              ad_samp_sum.sum   = 0;
 110   5                                              ad_samp_sum.point = 0;
 111   5      
 112   5                                              //2.e ◊¥Ã¨->  µ ±ºÏ≤‚
 113   5                                              system_status = SYS_CHECK;
 114   5                                      }
 115   4      
C51 COMPILER V9.54   ADC_TASK                                                              05/13/2016 14:54:22 PAGE 3   

 116   4                                      break;
 117   4      
 118   4                              case SYS_CHECK: // µ ±ºÏ≤‚
 119   4                                      //2. ≈–∂œ «∑ÒÕ‚¡¶±®æØ
 120   4                                      ad_chn_over = ad_chn_over << 1;   //Bit0ÃÓ0£¨“Ú¥À»± °‘⁄‘ –Ì∑∂Œßƒ⁄
 121   4                                      if (val <= ad_chn_base.base_up) {
 122   5                                              //‘⁄’≈¡¶…œ/œ¬œﬁ‘ –Ì∑∂Œßƒ⁄
 123   5                                              //a. «Â±Í÷æ(»± °)
 124   5                                              //b. º∆»Î∏˙◊Ÿª˘◊º÷µ«Û∫Õ÷–
 125   5                                              ad_samp_sum.sum += val;
 126   5                                              ad_samp_sum.point++;
 127   5      
 128   5                                              if (ad_samp_sum.point == 2) {
 129   6                                                      //¬˙2µ„(‘º–Ë0.6√Î)
 130   6                                                      //b.0 º∆À„’‚2µ„æ˘÷µ
 131   6                                                      val_temp = ad_samp_sum.sum >> 1;   //≥˝”⁄2, µ√µΩ’‚2µ„µƒæ˘÷µ
 132   6                                                      //b.1 ∏¸–¬ª˘◊º÷µ
 133   6                                                      if (ad_chn_base.base > (val_temp + 1)) {
 134   7                                                              //÷¡…Ÿ–°2, ‘⁄ª∫¬˝À…≥⁄
 135   7                                                              //ZZX: ¡¢º¥∏˙◊Ÿ, ∏˙◊Ÿ≤Ó÷µµƒ 1/2
 136   7                                                              val_temp = (ad_chn_base.base - val_temp) >> 1;
 137   7                                                              if (ad_chn_base.base >= val_temp) {
 138   8                                                                      ad_chn_base.base -= val_temp;
 139   8                                                                      //Õ¨≤Ω∏¸–¬…œœ¬œﬁ
 140   8                                                                      val_temp = ad_chn_base.base;
 141   8                                                                      ad_chn_base.base_down = val_temp / 3;
 142   8                                                                      if ((1023 - ad_chn_base.base) > ad_still_Dup) {
 143   9                                                                              ad_chn_base.base_up = ad_chn_base.base + ad_still_Dup;
 144   9                                                                      } else {
 145   9                                                                              ad_chn_base.base_up = 1023;
 146   9                                                                      }
 147   8                                                              }
 148   7      
 149   7                                                              //«Âª∫¬˝’≈ΩÙ∏˙◊Ÿ±‰¡ø
 150   7                                                              md_point = 0;
 151   7                                                      } else if (val_temp > (ad_chn_base.base + 1)) {
 152   7                                                              // ÷¡…Ÿ¥Û2, ª∫¬˝’≈ΩÙ
 153   7                                                              md_point++;
 154   7                                                              if (md_point >= DEF_ModiBASE_PT) {
 155   8                                                                      // “—¬˙ª∫¬˝’≈ΩÙ ±µƒ¡¨–¯º∆¡øµ„ ˝, Ω¯––“ª¥Œ∏˙◊Ÿ
 156   8                                                                      // 1. ∏˙◊Ÿª˘◊º÷µ
 157   8                                                                      if (ad_chn_base.base < 1023) {
 158   9                                                                              //ø…“‘µ›‘ˆ1
 159   9                                                                              ad_chn_base.base++;
 160   9                                                                              // Õ¨≤Ω∏¸–¬…œœ¬œﬁ
 161   9                                                                              val_temp = ad_chn_base.base;
 162   9                                                                              ad_chn_base.base_down = val_temp / 3;
 163   9                                                                              if (ad_chn_base.base_up < 1023) {
 164  10                                                                                      ad_chn_base.base_up++;
 165  10                                                                              }
 166   9                                                                      }
 167   8                                                                      // 2. «Âª∫¬˝’≈ΩÙ∏˙◊Ÿ±‰¡ø
 168   8                                                                      md_point = 0;
 169   8                                                              }
 170   7                                                      }
 171   6      
 172   6                                                      //b.2 ∏¥ŒªΩ◊∂Œ∫Õ±‰¡ø - ”√”⁄4µ„4µ„∆Ωæ˘µƒ«Û∫ÕΩ·ππ
 173   6                                                      ad_samp_sum.sum   = 0;
 174   6                                                      ad_samp_sum.point = 0;
 175   6                                              }
 176   5                                      } else {
 177   5                                              //Õ‚¡¶±®æØ, ÷√±Í÷æ
C51 COMPILER V9.54   ADC_TASK                                                              05/13/2016 14:54:22 PAGE 4   

 178   5                                              ad_chn_over |= 0x01;
 179   5                                      }
 180   4      
 181   4                                      //2.4 ¡¨–¯4µ„≥¨∑∂Œß£¨¥ÀÕ®µ¿”–Õ‚¡¶±®æØ
 182   4                                      if ((ad_chn_over & 0x0F) == 0x0F) {
 183   5                                              //÷√Õ‚¡¶±®æØ±Í÷æ
 184   5                                              ad_alarm_exts |= (Uint16)0x01;
 185   5      
 186   5                                              //±®æØº∆ ±tick«Â¡„
 187   5                                              ad_alarm_tick = 0;
 188   5      
 189   5                                              //¡¢º¥∏¸–¬ª˙÷∆
 190   5                                              ad_chn_base.base = val;
 191   5                                              val_temp = ad_chn_base.base;
 192   5                                              ad_chn_base.base_down = val_temp / 3;
 193   5                                              if ((1023 - ad_chn_base.base) > ad_still_Dup) {
 194   6                                                      ad_chn_base.base_up = ad_chn_base.base + ad_still_Dup;
 195   6                                              } else {
 196   6                                                      ad_chn_base.base_up = 1023;
 197   6                                              }
 198   5      
 199   5                                              //∏¥ŒªΩ◊∂Œ∫Õ±‰¡ø - ”√”⁄4µ„4µ„∆Ωæ˘µƒ«Û∫ÕΩ·ππ
 200   5                                              ad_samp_sum.sum = 0;
 201   5                                              ad_samp_sum.point = 0;
 202   5      
 203   5                                              //«Âª∫¬˝’≈ΩÙ∏˙◊Ÿ±‰¡ø
 204   5                                              md_point = 0;   //”√”⁄ª˘◊º÷µ∏˙◊Ÿµƒº∆¡øµ„ ˝
 205   5                                      } else if ((ad_chn_over & 0x0F) == 0x00) {
 206   5                                              //ŒﬁÕ‚¡¶±®æØ
 207   5                                              //ºÏ≤È±®æØ ±º‰ «∑Ò“—µΩ
 208   5                                              if (ad_alarm_tick > ALARM_TEMPO) {
 209   6                                                      //±®æØ“—æ≠µΩ◊Ó¥Û±®æØ ±º‰, Õ£÷π±®æØ
 210   6                                                      ad_alarm_exts &= ~((Uint16)0x01);
 211   6                                              }
 212   5                                      }
 213   4      
 214   4                                      //3 LED÷∏ æ(Œﬁmask)
 215   4                                      temp16 = ad_alarm_exts & 0x0001;
 216   4                                      if (alarm_led_flag != temp16) {
 217   5                                              //LED÷∏ æ–≈œ¢”–±‰ªØ
 218   5                                              alarm_led_flag = temp16;
 219   5                                              P33 = !P33;
 220   5                                      }
 221   4      
 222   4                                      //4 ∏¸–¬±®æØ±Í÷æ
 223   4                                      temp16 = (ad_alarm_exts & 0x0001) & ad_sensor_mask;
 224   4                                      if (temp16 == 0) {
 225   5                                              ad_alarm_flag = 0;   //Œﬁ±®æØ
 226   5                                      } else {
 227   5                                              ad_alarm_flag = 1;   //”–±®æØ
 228   5                                      }
 229   4      
 230   4                                      break;
 231   4                              }
 232   3      
 233   3                              //3.µ±«∞≤…—˘÷µ¥¶¿ÌÕÍ±œ£¨‘ –Ì–¬µƒ≤…—˘÷µ ‰»Î
 234   3                              ad_sample.valid = FALSE;
 235   3                      }
 236   2              }
 237   1      }


C51 COMPILER V9.54   ADC_TASK                                                              05/13/2016 14:54:22 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    791    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =      1    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
